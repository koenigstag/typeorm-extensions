"use strict";(self.webpackChunktypeorm_extensions_docs=self.webpackChunktypeorm_extensions_docs||[]).push([[8927],{6520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(4848),s=n(8453);const r={sidebar_position:1},i="type KeyProxyCallback",a={id:"api/typed/types/KeyProxyCallback",title:"type KeyProxyCallback",description:"",source:"@site/docs/api/typed/types/KeyProxyCallback.md",sourceDirName:"api/typed/types",slug:"/api/typed/types/KeyProxyCallback",permalink:"/typeorm-extensions/docs/api/typed/types/KeyProxyCallback",draft:!1,unlisted:!1,editUrl:"https://github.com/koenigstag/typeorm-extensions/tree/main/page/docs/docs/api/typed/types/KeyProxyCallback.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"api",previous:{title:"distinctOnTyped",permalink:"/typeorm-extensions/docs/api/typed/distinctOnTyped"}},p={},c=[];function y(e){const t={h1:"h1",...(0,s.R)(),...e.components};return(0,o.jsx)(t.h1,{id:"type-keyproxycallback",children:"type KeyProxyCallback"})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);