"use strict";(self.webpackChunktypeorm_extensions_docs=self.webpackChunktypeorm_extensions_docs||[]).push([[943],{1698:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=t(4848),n=t(8453);const s={sidebar_position:3},d="applyOrderFilter",o={id:"api/order/applyOrderFilter",title:"applyOrderFilter",description:"Description",source:"@site/docs/api/order/applyOrderFilter.md",sourceDirName:"api/order",slug:"/api/order/applyOrderFilter",permalink:"/typeorm-extensions/docs/api/order/applyOrderFilter",draft:!1,unlisted:!1,editUrl:"https://github.com/koenigstag/typeorm-extensions/tree/main/page/docs/docs/api/order/applyOrderFilter.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"api",previous:{title:"applyOrder",permalink:"/typeorm-extensions/docs/api/order/applyOrder"},next:{title:"interface OrderFilter",permalink:"/typeorm-extensions/docs/api/order/types/OrderFilter"}},l={},a=[{value:"Description",id:"description",level:2},{value:"Signature",id:"signature",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Usage",id:"usage",level:2}];function p(e){const r={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"applyorderfilter",children:"applyOrderFilter"}),"\n",(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"applyOrderFilter"})," is a method that applies a set of orders to a query."]}),"\n",(0,i.jsx)(r.h2,{id:"signature",children:"Signature"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"applyOrderFilter(\n  orderFilter: OrderFilter<Entity>,\n  orderOptions?: ApplyOrderOptions\n): SelectQueryBuilder<Entity>\n"})}),"\n",(0,i.jsx)(r.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"orderFilter: OrderFilter<Entity>"}),": The order options to apply to the query.","\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"orderBy: Array<OrderParam>"}),": Order configurations."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"orderOptions?: ApplyOrderOptions"}),": Additional options to apply to the order filter.","\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"useDoubleQuotes?: boolean"}),": Whether to wrap the order field with double qoutes (defaults to true)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"resetPreviousOrder?: boolean"}),": Whether to reset previous orders (defaults to false)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"alias?: atring"}),": The alias to use for the order fields."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"alwaysAliasFields?: string[]"}),": Fields that should always be aliased. Uses query alias if no alias option is provided. Defaults to ",(0,i.jsx)(r.code,{children:"['id', 'createdAt', 'updatedAt', 'deletedAt']"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"query\n  .applyOrderFilter(\n    {\n      orderBy: [\n        { field: 'updatedAt', direction: 'desc', nulls: 'last' }\n      ],\n    }, \n    { useDoubleQuotes: true }\n  )\n"})})]})}function c(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>o});var i=t(6540);const n={},s=i.createContext(n);function d(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);